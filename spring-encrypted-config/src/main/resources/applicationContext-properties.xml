<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- Configuration for encryptor, based on environment variables or using -->
	<!-- file based token -->
	<!-- The encryption password will be read from a file token. Defined by 
		the -->
	<!-- passwordName -->
	<bean id="pbeConfig" class="net.cnmconsulting.spring.config.util.FileStringPBEConfig"
		p:algorithm="PBEWithMD5AndDES" p:passwordName="classpath:/cnm.token">
	</bean>


	<!-- The will be the encryptor used for decrypting configuration values. -->
	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor"
		p:config-ref="pbeConfig" />


	<!-- The EncryptablePropertyPlaceholderConfigurer will read the -->
	<!-- .properties files and make their values accessible as ${var} -->
	<!-- Our "configurationEncryptor" bean (which implements -->
	<!-- org.jasypt.encryption.StringEncryptor) is set as a constructor arg. 
		<bean id="propertyConfigurer" class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer" 
		p:locations-ref="passwordProps"> <constructor-arg ref="configurationEncryptor" 
		/> </bean> -->

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:locations-ref="passwordProps" />


	<bean id="props"
		class="net.cnmconsulting.spring.config.PropertiesFactoryBean"
		p:locations-ref="passwordProps">
		<constructor-arg ref="configurationEncryptor" />
	</bean>

	<util:list id="passwordProps">
		<value>classpath:/cnm.properties</value>
	</util:list>

</beans>
